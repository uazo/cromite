From: uazo <uazo@users.noreply.github.com>
Date: Sun, 7 May 2023 14:01:56 +0000
Subject: Disable GSA by default

License: GPL-2.0-or-later - https://spdx.org/licenses/GPL-2.0-or-later.html
---
 .../src/org/chromium/base/PackageUtils.java   |  1 +
 .../chrome/browser/IntentHandler.java         |  6 ----
 .../chrome/browser/share/LensUtils.java       | 14 ++-------
 .../chromium/chrome/browser/gsa/GSAUtils.java | 29 ++++---------------
 .../GoogleBottomBarActionsHandler.java        | 19 ++----------
 .../chrome/browser/pdf/PdfCoordinator.java    |  2 +-
 .../Disable-GSA-by-default.inc                |  1 +
 7 files changed, 12 insertions(+), 60 deletions(-)
 create mode 100644 cromite_flags/chrome/browser/flags/android/chrome_feature_list_cc/Disable-GSA-by-default.inc

diff --git a/base/android/java/src/org/chromium/base/PackageUtils.java b/base/android/java/src/org/chromium/base/PackageUtils.java
--- a/base/android/java/src/org/chromium/base/PackageUtils.java
+++ b/base/android/java/src/org/chromium/base/PackageUtils.java
@@ -165,6 +165,7 @@ public class PackageUtils {
      * @return Package name of assistant app, or null if unable to get.
      */
     public static @Nullable String getDefaultAssistantPackageName(Context context) {
+        if ((true)) return null;
         @Nullable String defaultAssistantSetting =
                 Settings.Secure.getString(context.getContentResolver(), DEFAULT_ASSISTANT_SETTING);
         if (defaultAssistantSetting == null || defaultAssistantSetting.isBlank()) {
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/IntentHandler.java b/chrome/android/java/src/org/chromium/chrome/browser/IntentHandler.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/IntentHandler.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/IntentHandler.java
@@ -47,7 +47,6 @@ import org.chromium.chrome.browser.document.ChromeLauncherActivity;
 import org.chromium.chrome.browser.externalnav.IntentWithRequestMetadataHandler;
 import org.chromium.chrome.browser.externalnav.IntentWithRequestMetadataHandler.RequestMetadata;
 import org.chromium.chrome.browser.flags.ChromeFeatureList;
-import org.chromium.chrome.browser.gsa.GSAUtils;
 import org.chromium.chrome.browser.omnibox.suggestions.AutocompleteCoordinator;
 import org.chromium.chrome.browser.profiles.Profile;
 import org.chromium.chrome.browser.profiles.ProfileManager;
@@ -279,9 +278,6 @@ public class IntentHandler {
 
     public static final String EXTRA_CCT_EARLY_NAV = "org.chromium.chrome.browser.cct_early_nav";
 
-    /** The package name for the Google Search App. */
-    public static final String PACKAGE_GSA = GSAUtils.GSA_PACKAGE_NAME;
-
     private static Pair<Integer, String> sPendingReferrer;
     private static int sReferrerId;
     private static String sPendingIncognitoUrl;
@@ -557,8 +553,6 @@ public class IntentHandler {
             return ExternalAppId.LINE;
         } else if (packageName.equals(PACKAGE_WHATSAPP)) {
             return ExternalAppId.WHATSAPP;
-        } else if (packageName.equals(PACKAGE_GSA)) {
-            return ExternalAppId.GSA;
         } else if (packageName.equals(ContextUtils.getApplicationContext().getPackageName())) {
             return ExternalAppId.CHROME;
         } else if (packageName.startsWith(WEBAPK_PACKAGE_PREFIX)) {
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/share/LensUtils.java b/chrome/android/java/src/org/chromium/chrome/browser/share/LensUtils.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/share/LensUtils.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/share/LensUtils.java
@@ -10,7 +10,6 @@ import android.os.Build;
 import org.chromium.base.ResettersForTesting;
 import org.chromium.chrome.browser.IntentHandler;
 import org.chromium.chrome.browser.flags.ChromeFeatureList;
-import org.chromium.chrome.browser.gsa.GSAUtils;
 import org.chromium.components.externalauth.ExternalAuthUtils;
 
 /** This class provides utilities for intenting into Google Lens. */
@@ -49,12 +48,7 @@ public class LensUtils {
             if (context == null) {
                 return "";
             }
-            String agsaVersion = GSAUtils.getAgsaVersionName();
-            if (agsaVersion == null) {
                 return "";
-            } else {
-                return agsaVersion;
-            }
         }
     }
 
@@ -92,15 +86,11 @@ public class LensUtils {
      * @return Whether the package is valid.
      */
     public static boolean isValidAgsaPackage() {
-        if (sFakePassableLensEnvironmentForTesting) {
-            return true;
-        }
-
-        return ExternalAuthUtils.getInstance().isGoogleSigned(IntentHandler.PACKAGE_GSA);
+        return false;
     }
 
     public static boolean isGoogleLensFeatureEnabled(boolean isIncognito) {
-        return !isIncognito;
+        return false;
     }
 
     public static boolean shouldLogUkmForLensContextMenuFeatures() {
diff --git a/chrome/browser/gsa/java/src/org/chromium/chrome/browser/gsa/GSAUtils.java b/chrome/browser/gsa/java/src/org/chromium/chrome/browser/gsa/GSAUtils.java
--- a/chrome/browser/gsa/java/src/org/chromium/chrome/browser/gsa/GSAUtils.java
+++ b/chrome/browser/gsa/java/src/org/chromium/chrome/browser/gsa/GSAUtils.java
@@ -14,19 +14,12 @@ import org.chromium.build.annotations.Nullable;
 /** This class provides utilities for the state of Google Search App. */
 @NullMarked
 public class GSAUtils {
-    private static final Object sPackageInfoLock = new Object();
-    @Nullable private static volatile PackageInfo sPackageInfo;
-
-    public static final String GSA_PACKAGE_NAME = "com.google.android.googlequicksearchbox";
-    public static final String GSA_CLASS_NAME =
-            "com.google.android.apps.search.googleapp.activity.GoogleAppActivity";
-    public static final String VOICE_SEARCH_INTENT_ACTION = "android.intent.action.VOICE_ASSIST";
 
     /**
      * @return Whether the given package name is the package name for Google Search App.
      */
     public static boolean isGsaPackageName(String packageName) {
-        return GSA_PACKAGE_NAME.equals(packageName);
+        return false;
     }
 
     /**
@@ -38,6 +31,7 @@ public class GSAUtils {
      */
     public static boolean isAgsaVersionBelowMinimum(
             @Nullable String installedVersionName, @Nullable String minimumVersionName) {
+        if ((true)) return false;
         if (TextUtils.isEmpty(installedVersionName) || TextUtils.isEmpty(minimumVersionName)) {
             return true;
         }
@@ -68,8 +62,8 @@ public class GSAUtils {
      * @return The version name of the Agsa package or null if it can't be found.
      */
     public static @Nullable String getAgsaVersionName() {
-        PackageInfo info = getAgsaPackageInfo();
-        return info == null ? null : info.versionName;
+        PackageInfo packageInfo = null;
+        return packageInfo == null ? null : packageInfo.versionName;
     }
 
     /**
@@ -78,19 +72,6 @@ public class GSAUtils {
      * @return Whether the AGSA is enabled
      */
     public static boolean isAgsaEnabled() {
-        PackageInfo info = getAgsaPackageInfo();
-        return info != null && info.applicationInfo != null && info.applicationInfo.enabled;
-    }
-
-    @Nullable
-    private static PackageInfo getAgsaPackageInfo() {
-        if (sPackageInfo == null) {
-            synchronized (sPackageInfoLock) {
-                if (sPackageInfo == null) {
-                    sPackageInfo = PackageUtils.getPackageInfo(GSA_PACKAGE_NAME, 0);
-                }
-            }
-        }
-        return sPackageInfo;
+        return false;
     }
 }
diff --git a/chrome/browser/ui/android/google_bottom_bar/java/src/org/chromium/chrome/browser/ui/google_bottom_bar/GoogleBottomBarActionsHandler.java b/chrome/browser/ui/android/google_bottom_bar/java/src/org/chromium/chrome/browser/ui/google_bottom_bar/GoogleBottomBarActionsHandler.java
--- a/chrome/browser/ui/android/google_bottom_bar/java/src/org/chromium/chrome/browser/ui/google_bottom_bar/GoogleBottomBarActionsHandler.java
+++ b/chrome/browser/ui/android/google_bottom_bar/java/src/org/chromium/chrome/browser/ui/google_bottom_bar/GoogleBottomBarActionsHandler.java
@@ -4,9 +4,6 @@
 
 package org.chromium.chrome.browser.ui.google_bottom_bar;
 
-import static org.chromium.chrome.browser.gsa.GSAUtils.GSA_CLASS_NAME;
-import static org.chromium.chrome.browser.gsa.GSAUtils.GSA_PACKAGE_NAME;
-import static org.chromium.chrome.browser.gsa.GSAUtils.VOICE_SEARCH_INTENT_ACTION;
 import static org.chromium.chrome.browser.ui.google_bottom_bar.GoogleBottomBarLogger.GoogleBottomBarButtonEvent.SEARCHBOX_HOME;
 import static org.chromium.chrome.browser.ui.google_bottom_bar.GoogleBottomBarLogger.GoogleBottomBarButtonEvent.SEARCHBOX_LENS;
 import static org.chromium.chrome.browser.ui.google_bottom_bar.GoogleBottomBarLogger.GoogleBottomBarButtonEvent.SEARCHBOX_SEARCH;
@@ -105,11 +102,6 @@ class GoogleBottomBarActionsHandler {
     }
 
     void onSearchboxMicTap() {
-        GoogleBottomBarLogger.logButtonClicked(SEARCHBOX_VOICE_SEARCH);
-        Intent intent = new Intent(VOICE_SEARCH_INTENT_ACTION);
-        intent.setPackage(GSA_PACKAGE_NAME);
-
-        startGoogleAppActivityForResult(intent, "openGoogleAppVoiceSearch");
     }
 
     void onSearchboxLensTap(View buttonView) {
@@ -148,21 +140,13 @@ class GoogleBottomBarActionsHandler {
     }
 
     private void openGoogleAppSearch() {
-        Intent intent = new Intent(SearchManager.INTENT_ACTION_GLOBAL_SEARCH);
-        intent.setPackage(GSA_PACKAGE_NAME);
-
-        startGoogleAppActivityForResult(intent, "openGoogleAppSearch");
     }
 
     private void openGoogleAppHome() {
-        Intent intent = new Intent(Intent.ACTION_MAIN);
-        intent.addCategory(Intent.CATEGORY_INFO);
-        intent.setClassName(GSA_PACKAGE_NAME, GSA_CLASS_NAME);
-
-        startGoogleAppActivityForResult(intent, "openGoogleAppHome");
     }
 
     private void startGoogleAppActivityForResult(Intent intent, String actionName) {
+        if ((true)) return;
         intent.putExtra(EXTRA_IS_LAUNCHED_FROM_CHROME_SEARCH_ENTRYPOINT, true);
 
         if (PackageManagerUtils.canResolveActivity(intent)) {
@@ -274,6 +258,7 @@ class GoogleBottomBarActionsHandler {
     }
 
     private void sendPendingIntentWithUrl(PendingIntent pendingIntent) {
+        if ((true)) return;
         Tab tab = mTabProvider.get();
         if (tab == null) {
             Log.e(TAG, "Can't send pending intent as tab is null.");
diff --git a/chrome/browser/ui/android/pdf/java/src/org/chromium/chrome/browser/pdf/PdfCoordinator.java b/chrome/browser/ui/android/pdf/java/src/org/chromium/chrome/browser/pdf/PdfCoordinator.java
--- a/chrome/browser/ui/android/pdf/java/src/org/chromium/chrome/browser/pdf/PdfCoordinator.java
+++ b/chrome/browser/ui/android/pdf/java/src/org/chromium/chrome/browser/pdf/PdfCoordinator.java
@@ -265,7 +265,7 @@ public class PdfCoordinator {
     }
 
     @Nullable String requestAssistContent(String filename, boolean isWorkProfile) {
-        if (mUri == null) {
+        if ((true)) {
             return null;
         }
         String structuredData;
diff --git a/cromite_flags/chrome/browser/flags/android/chrome_feature_list_cc/Disable-GSA-by-default.inc b/cromite_flags/chrome/browser/flags/android/chrome_feature_list_cc/Disable-GSA-by-default.inc
new file mode 100644
--- /dev/null
+++ b/cromite_flags/chrome/browser/flags/android/chrome_feature_list_cc/Disable-GSA-by-default.inc
@@ -0,0 +1 @@
+SET_CROMITE_FEATURE_DISABLED(kExperimentsForAgsa);
--
