From: uazo <uazo@users.noreply.github.com>
Date: Sun, 5 May 2024 09:34:39 +0000
Subject: Add option to force tablet UI

License: GPL-2.0-or-later - https://spdx.org/licenses/GPL-2.0-or-later.html
---
 .../layout/custom_tabs_control_container.xml  |  2 +-
 .../java/res/layout/recent_tabs_page.xml      |  2 +-
 .../java/res/values-sw600dp/dimens.xml        |  4 ++--
 chrome/android/java/res/values/dimens.xml     |  6 +++++-
 .../browser/ChromeBaseAppCompatActivity.java  |  3 +++
 .../chrome/browser/WarmupManager.java         |  5 ++++-
 .../ChromeAccessibilitySettingsDelegate.java  | 19 ++++++++++++++++++
 .../chrome/browser/app/ChromeActivity.java    |  4 +++-
 .../overlays/strip/StripLayoutHelper.java     | 10 ++++++++--
 .../strip/StripLayoutHelperManager.java       |  6 +++++-
 .../scene_layer/TabStripSceneLayer.java       |  8 ++++++++
 .../init/ChromeBrowserInitializer.java        |  2 ++
 .../tabbed_mode/TabbedRootUiCoordinator.java  |  4 +++-
 .../chrome/browser/ui/RootUiCoordinator.java  |  6 +++++-
 chrome/browser/preferences/BUILD.gn           |  1 +
 .../preferences/ChromePreferenceKeys.java     |  1 +
 .../preferences/ChromeSharedPreferences.java  | 12 +++++++++++
 .../LegacyChromePreferenceKeys.java           |  1 +
 .../AppHeaderCoordinator.java                 |  2 ++
 .../omnibox/LocationBarCoordinator.java       |  2 +-
 .../strings/android_chrome_strings.grd        |  7 +++++++
 .../java/res/layout/control_container.xml     |  8 ++++----
 .../java/res/layout/toolbar_tablet.xml        |  2 +-
 .../java/res/values-sw600dp/dimens.xml        |  5 +++--
 .../toolbar/java/res/values/dimens.xml        |  6 ++++--
 .../browser/toolbar/ControlContainer.java     |  2 +-
 .../toolbar/top/ToolbarControlContainer.java  | 20 ++++++++++++++++++-
 .../browser/toolbar/top/ToolbarLayout.java    |  5 ++++-
 .../tab_strip/HeightTransitionHandler.java    |  2 ++
 .../TabStripTransitionCoordinator.java        |  6 +++++-
 .../res/xml/accessibility_preferences.xml     |  5 +++++
 .../accessibility/AccessibilitySettings.java  | 13 ++++++++++++
 .../AccessibilitySettingsDelegate.java        |  2 ++
 .../chromium/ui/base/DeviceFormFactor.java    | 14 +++++++++++++
 34 files changed, 171 insertions(+), 26 deletions(-)

diff --git a/chrome/android/java/res/layout/custom_tabs_control_container.xml b/chrome/android/java/res/layout/custom_tabs_control_container.xml
--- a/chrome/android/java/res/layout/custom_tabs_control_container.xml
+++ b/chrome/android/java/res/layout/custom_tabs_control_container.xml
@@ -32,7 +32,7 @@ found in the LICENSE file.
             android:id="@+id/find_toolbar_stub"
             android:inflatedId="@+id/find_toolbar"
             android:visibility="gone"
-            android:layout_marginTop="@dimen/tab_strip_height"
+            android:layout_marginTop="@dimen/tab_strip_height_cromite"
             android:layout_width="match_parent"
             android:layout_height="@dimen/custom_tabs_control_container_height"
             android:layout="@layout/find_toolbar" />
diff --git a/chrome/android/java/res/layout/recent_tabs_page.xml b/chrome/android/java/res/layout/recent_tabs_page.xml
--- a/chrome/android/java/res/layout/recent_tabs_page.xml
+++ b/chrome/android/java/res/layout/recent_tabs_page.xml
@@ -11,7 +11,7 @@ found in the LICENSE file.
     android:id="@+id/history_navigation"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:paddingTop="@dimen/tab_strip_height" >
+    android:paddingTop="@dimen/tab_strip_height_cromite" >
 
     <org.chromium.chrome.browser.ntp.NativePageRootFrameLayout
         android:id="@+id/recent_tabs_root"
diff --git a/chrome/android/java/res/values-sw600dp/dimens.xml b/chrome/android/java/res/values-sw600dp/dimens.xml
--- a/chrome/android/java/res/values-sw600dp/dimens.xml
+++ b/chrome/android/java/res/values-sw600dp/dimens.xml
@@ -14,8 +14,8 @@ found in the LICENSE file.
     <dimen name="compositor_tab_title_text_size">14sp</dimen>
 
     <!-- Full Screen Dimensions -->
-    <dimen name="control_container_height">96dp</dimen>
-    <dimen name="custom_tabs_control_container_height">64dp</dimen>
+    <dimen name="control_container_height_cromite">96dp</dimen>
+    <dimen name="control_container_height_tabletui">96dp</dimen>
 
     <!-- NTP dimensions -->
     <dimen name="ntp_search_box_transition_start_offset">60dp</dimen>
diff --git a/chrome/android/java/res/values/dimens.xml b/chrome/android/java/res/values/dimens.xml
--- a/chrome/android/java/res/values/dimens.xml
+++ b/chrome/android/java/res/values/dimens.xml
@@ -117,9 +117,13 @@ found in the LICENSE file.
     <dimen name="tab_modal_scrim_vertical_margin">16dp</dimen>
 
     <!-- Should match toolbar_height_no_shadow -->
-    <dimen name="control_container_height">@dimen/default_action_bar_height</dimen>
+    <dimen name="control_container_height_cromite">@dimen/default_action_bar_height</dimen>
+    <dimen name="control_container_height_tabletui">96dp</dimen>
     <dimen name="custom_tabs_control_container_height">@dimen/default_action_bar_height</dimen>
 
+    <!-- The combined height of the tab strip and toolbar. -->
+    <dimen name="tab_strip_and_toolbar_height_cromite">56dp</dimen>
+
     <!-- Find in Page dimensions -->
     <dimen name="find_in_page_popup_width">375dp</dimen>
     <dimen name="find_in_page_popup_height">64dp</dimen>
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ChromeBaseAppCompatActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/ChromeBaseAppCompatActivity.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/ChromeBaseAppCompatActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ChromeBaseAppCompatActivity.java
@@ -58,6 +58,7 @@ import org.chromium.chrome.browser.metrics.UmaSessionStats;
 import org.chromium.chrome.browser.night_mode.GlobalNightModeStateProviderHolder;
 import org.chromium.chrome.browser.night_mode.NightModeStateProvider;
 import org.chromium.chrome.browser.night_mode.NightModeUtils;
+import org.chromium.chrome.browser.preferences.ChromeSharedPreferences;
 import org.chromium.chrome.browser.ui.edge_to_edge.EdgeToEdgeUtils;
 import org.chromium.components.browser_ui.edge_to_edge.EdgeToEdgeManager;
 import org.chromium.components.browser_ui.edge_to_edge.EdgeToEdgeStateProvider;
@@ -133,6 +134,8 @@ public class ChromeBaseAppCompatActivity extends AppCompatActivity
     protected void attachBaseContext(Context newBase) {
         super.attachBaseContext(newBase);
 
+        ChromeSharedPreferences.warmUp();
+
         // Make sure the "chrome" split is loaded before checking if ClassLoaders are equal.
         SplitChromeApplication.finishPreload(CHROME_SPLIT_NAME);
         ClassLoader chromeModuleClassLoader = ChromeBaseAppCompatActivity.class.getClassLoader();
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/WarmupManager.java b/chrome/android/java/src/org/chromium/chrome/browser/WarmupManager.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/WarmupManager.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/WarmupManager.java
@@ -66,6 +66,7 @@ import org.chromium.content_public.browser.WebContents;
 import org.chromium.content_public.browser.WebContentsObserver;
 import org.chromium.net.NetId;
 import org.chromium.ui.LayoutInflaterUtils;
+import org.chromium.ui.base.DeviceFormFactor;
 import org.chromium.ui.base.WindowAndroid;
 import org.chromium.ui.display.DisplayUtil;
 import org.chromium.url.GURL;
@@ -481,7 +482,9 @@ public class WarmupManager {
             ControlContainer controlContainer = mainView.findViewById(R.id.control_container);
 
             if (toolbarId != ActivityUtils.NO_RESOURCE_ID && controlContainer != null) {
-                controlContainer.initWithToolbar(toolbarId);
+                controlContainer.initWithToolbar(toolbarId,
+                        DeviceFormFactor.isForceTabletUI()
+                            ? R.dimen.control_container_height_tabletui : 0);
             }
             return mainView;
         } catch (InflateException e) {
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/accessibility/settings/ChromeAccessibilitySettingsDelegate.java b/chrome/android/java/src/org/chromium/chrome/browser/accessibility/settings/ChromeAccessibilitySettingsDelegate.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/accessibility/settings/ChromeAccessibilitySettingsDelegate.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/accessibility/settings/ChromeAccessibilitySettingsDelegate.java
@@ -62,6 +62,25 @@ public class ChromeAccessibilitySettingsDelegate implements AccessibilitySetting
         }
     }
 
+    private static class ForceTabletUIDelegate implements BooleanPreferenceDelegate {
+        @Override
+        public boolean getValue() {
+            return ChromeSharedPreferences.getInstance().readBoolean(
+                      ChromePreferenceKeys.FLAGS_FORCE_TABLET_UI_ENABLED, false);
+        }
+
+        @Override
+        public void setValue(boolean value) {
+            ChromeSharedPreferences.getInstance().writeBoolean(
+                      ChromePreferenceKeys.FLAGS_FORCE_TABLET_UI_ENABLED, value);
+        }
+    }
+
+    @Override
+    public BooleanPreferenceDelegate getForceTabletUIDelegate() {
+        return new ForceTabletUIDelegate();
+    }
+
     private final Profile mProfile;
 
     /**
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/app/ChromeActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/app/ChromeActivity.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/app/ChromeActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/app/ChromeActivity.java
@@ -783,7 +783,9 @@ public abstract class ChromeActivity extends AsyncInitializationActivity
             // Inflate the correct toolbar layout for the device.
             int toolbarLayoutId = getToolbarLayoutId();
             if (toolbarLayoutId != ActivityUtils.NO_RESOURCE_ID && controlContainer != null) {
-                controlContainer.initWithToolbar(toolbarLayoutId);
+                controlContainer.initWithToolbar(toolbarLayoutId,
+                        DeviceFormFactor.isForceTabletUI()
+                            ? R.dimen.control_container_height_tabletui : 0);
             }
             onInitialLayoutInflationComplete();
         }
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/compositor/overlays/strip/StripLayoutHelper.java b/chrome/android/java/src/org/chromium/chrome/browser/compositor/overlays/strip/StripLayoutHelper.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/compositor/overlays/strip/StripLayoutHelper.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/compositor/overlays/strip/StripLayoutHelper.java
@@ -117,6 +117,7 @@ import org.chromium.components.tab_group_sync.SavedTabGroup;
 import org.chromium.components.tab_group_sync.TabGroupSyncService;
 import org.chromium.components.tab_group_sync.TriggerSource;
 import org.chromium.components.tab_groups.TabGroupColorId;
+import org.chromium.ui.base.DeviceFormFactor;
 import org.chromium.ui.base.LocalizationUtils;
 import org.chromium.ui.base.WindowAndroid;
 import org.chromium.ui.modaldialog.ModalDialogManager;
@@ -4264,8 +4265,13 @@ public class StripLayoutHelper
         mCloseButtonMenu.setAnchorView(tabView);
         // 3. Set the vertical offset to align the close button menu with bottom of the tab strip
         int tabHeight = mManagerHost.getHeight();
-        int verticalOffset =
-                -(tabHeight - (int) mContext.getResources().getDimension(R.dimen.tab_strip_height));
+        int tab_strip_height =
+            (int) mContext.getResources().getDimension(R.dimen.tab_strip_height_cromite);
+        if (DeviceFormFactor.isForceTabletUI()) {
+            tab_strip_height =
+                (int) mContext.getResources().getDimension(R.dimen.tab_strip_height_tabletui);
+        }
+        int verticalOffset = -(tabHeight - tab_strip_height);
         mCloseButtonMenu.setVerticalOffset(verticalOffset);
 
         // 4. Set the horizontal offset to align the close button menu with the right side of the
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/compositor/overlays/strip/StripLayoutHelperManager.java b/chrome/android/java/src/org/chromium/chrome/browser/compositor/overlays/strip/StripLayoutHelperManager.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/compositor/overlays/strip/StripLayoutHelperManager.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/compositor/overlays/strip/StripLayoutHelperManager.java
@@ -97,6 +97,7 @@ import org.chromium.components.browser_ui.desktop_windowing.DesktopWindowStateMa
 import org.chromium.components.browser_ui.styles.SemanticColorUtils;
 import org.chromium.components.browser_ui.widget.scrim.ScrimProperties;
 import org.chromium.content_public.browser.LoadUrlParams;
+import org.chromium.ui.base.DeviceFormFactor;
 import org.chromium.ui.base.LocalizationUtils;
 import org.chromium.ui.base.PageTransition;
 import org.chromium.ui.base.WindowAndroid;
@@ -468,7 +469,10 @@ public class StripLayoutHelperManager
 
         mIsLayoutOptimizationsEnabled =
                 ToolbarFeatures.isTabStripWindowLayoutOptimizationEnabled(true);
-        mScrollableStripHeight = res.getDimension(R.dimen.tab_strip_height) / mDensity;
+        mScrollableStripHeight =
+            (DeviceFormFactor.isForceTabletUI()
+                ? res.getDimension(R.dimen.tab_strip_height_tabletui)
+                : res.getDimension(R.dimen.tab_strip_height_cromite)) / mDensity;
         mHeight =
                 mIsLayoutOptimizationsEnabled
                         ? toolbarManager.getTabStripHeightSupplier().get() / mDensity
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/compositor/scene_layer/TabStripSceneLayer.java b/chrome/android/java/src/org/chromium/chrome/browser/compositor/scene_layer/TabStripSceneLayer.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/compositor/scene_layer/TabStripSceneLayer.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/compositor/scene_layer/TabStripSceneLayer.java
@@ -111,6 +111,14 @@ public class TabStripSceneLayer extends SceneOverlayLayer {
         if (mNativePtr == 0) return;
         final boolean visible = yOffset > -layoutHelper.getHeight();
 
+        if (DeviceFormFactor.isNonMultiDisplayContextOnTablet(ContextUtils.getApplicationContext())) {
+                TintedCompositorButton newTabButton = layoutHelper.getNewTabButton();
+                if (newTabButton.isVisible()) {
+                   rightPaddingDp += newTabButton.getWidth() + layoutHelper.getNewTabBtnVisualOffset()
+                        + StripLayoutGroupTitle.REORDER_BACKGROUND_PADDING_END;
+                }
+        }
+
         // This will hide the tab strips if necessary.
         TabStripSceneLayerJni.get()
                 .beginBuildingFrame(mNativePtr, TabStripSceneLayer.this, visible);
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/init/ChromeBrowserInitializer.java b/chrome/android/java/src/org/chromium/chrome/browser/init/ChromeBrowserInitializer.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/init/ChromeBrowserInitializer.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/init/ChromeBrowserInitializer.java
@@ -17,6 +17,7 @@ import org.chromium.base.library_loader.LibraryProcessType;
 import org.chromium.base.task.ChainedTasks;
 import org.chromium.base.task.TaskTraits;
 import org.chromium.chrome.browser.flags.ChromeSwitches;
+import org.chromium.chrome.browser.preferences.ChromeSharedPreferences;
 import org.chromium.chrome.browser.profiles.ProfileManager;
 import org.chromium.chrome.browser.signin.SigninCheckerProvider;
 import org.chromium.components.background_task_scheduler.BackgroundTaskSchedulerFactory;
@@ -107,6 +108,7 @@ public class ChromeBrowserInitializer {
     public void handlePreNativeStartupAndLoadLibraries(final BrowserParts parts) {
         ThreadUtils.checkUiThread();
         if (parts.isActivityFinishingOrDestroyed()) return;
+        ChromeSharedPreferences.warmUp();
         ProcessInitializationHandler.getInstance().initializePreNative();
         ProcessInitializationHandler.getInstance().initializePreNativeLibraryLoad();
         try (TraceEvent e = TraceEvent.scoped("ChromeBrowserInitializer.preInflationStartup")) {
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/tabbed_mode/TabbedRootUiCoordinator.java b/chrome/android/java/src/org/chromium/chrome/browser/tabbed_mode/TabbedRootUiCoordinator.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/tabbed_mode/TabbedRootUiCoordinator.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/tabbed_mode/TabbedRootUiCoordinator.java
@@ -697,7 +697,9 @@ public class TabbedRootUiCoordinator extends RootUiCoordinator {
 
     @Override
     public int getControlContainerHeightResource() {
-        return R.dimen.control_container_height;
+        if (DeviceFormFactor.isForceTabletUI())
+            return R.dimen.control_container_height_tabletui;
+        return R.dimen.control_container_height_cromite;
     }
 
     @Override
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ui/RootUiCoordinator.java b/chrome/android/java/src/org/chromium/chrome/browser/ui/RootUiCoordinator.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/ui/RootUiCoordinator.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ui/RootUiCoordinator.java
@@ -104,6 +104,8 @@ import org.chromium.chrome.browser.paint_preview.DemoPaintPreview;
 import org.chromium.chrome.browser.password_manager.ManagePasswordsReferrer;
 import org.chromium.chrome.browser.password_manager.PasswordManagerLauncher;
 import org.chromium.chrome.browser.pdf.PdfPage;
+import org.chromium.chrome.browser.preferences.ChromePreferenceKeys;
+import org.chromium.chrome.browser.preferences.ChromeSharedPreferences;
 import org.chromium.chrome.browser.profiles.Profile;
 import org.chromium.chrome.browser.quick_delete.QuickDeleteController;
 import org.chromium.chrome.browser.quick_delete.QuickDeleteDelegateImpl;
@@ -1625,7 +1627,9 @@ public class RootUiCoordinator
         if (!mSupportsFindInPageSupplier.getAsBoolean()) return;
 
         int stubId = R.id.find_toolbar_stub;
-        if (DeviceFormFactor.isNonMultiDisplayContextOnTablet(mActivity)) {
+        if (DeviceFormFactor.isNonMultiDisplayContextOnTablet(mActivity) &&
+                !ChromeSharedPreferences.getInstance().readBoolean(
+                      ChromePreferenceKeys.FLAGS_FORCE_TABLET_UI_ENABLED, false)) {
             stubId = R.id.find_toolbar_tablet_stub;
         }
         mFindToolbarManager =
diff --git a/chrome/browser/preferences/BUILD.gn b/chrome/browser/preferences/BUILD.gn
--- a/chrome/browser/preferences/BUILD.gn
+++ b/chrome/browser/preferences/BUILD.gn
@@ -25,6 +25,7 @@ android_library("java") {
     "//components/cached_flags:java",
     "//third_party/androidx:androidx_annotation_annotation_java",
     "//third_party/jni_zero:jni_zero_java",
+    "//ui/android:ui_java",
   ]
 
   srcjar_deps = [
diff --git a/chrome/browser/preferences/android/java/src/org/chromium/chrome/browser/preferences/ChromePreferenceKeys.java b/chrome/browser/preferences/android/java/src/org/chromium/chrome/browser/preferences/ChromePreferenceKeys.java
--- a/chrome/browser/preferences/android/java/src/org/chromium/chrome/browser/preferences/ChromePreferenceKeys.java
+++ b/chrome/browser/preferences/android/java/src/org/chromium/chrome/browser/preferences/ChromePreferenceKeys.java
@@ -314,6 +314,7 @@ public final class ChromePreferenceKeys {
     /** Whether the app-specific history info text was already seen by users. */
     public static final String HISTORY_APP_SPECIFIC_INFO_SEEN =
             "Chrome.History.AppSpecificInfoSeen";
+    public static final String FLAGS_FORCE_TABLET_UI_ENABLED = "force_tablet_ui_enabled";
 
     /** Keys used to save settings related to homepage. */
     public static final String DEPRECATED_HOMEPAGE_CUSTOM_URI = "homepage_custom_uri";
diff --git a/chrome/browser/preferences/android/java/src/org/chromium/chrome/browser/preferences/ChromeSharedPreferences.java b/chrome/browser/preferences/android/java/src/org/chromium/chrome/browser/preferences/ChromeSharedPreferences.java
--- a/chrome/browser/preferences/android/java/src/org/chromium/chrome/browser/preferences/ChromeSharedPreferences.java
+++ b/chrome/browser/preferences/android/java/src/org/chromium/chrome/browser/preferences/ChromeSharedPreferences.java
@@ -14,6 +14,8 @@ import org.chromium.build.annotations.NullMarked;
 import org.chromium.build.annotations.Nullable;
 import org.chromium.build.annotations.OptimizeAsNonNull;
 
+import org.chromium.ui.base.DeviceFormFactor;
+
 @JNINamespace("android::shared_preferences")
 @NullMarked
 public class ChromeSharedPreferences {
@@ -26,6 +28,16 @@ public class ChromeSharedPreferences {
                             LegacyChromePreferenceKeys.getPrefixesInUse())
                     : null);
 
+    static {
+        DeviceFormFactor.setForceTabletUI(
+            ChromeSharedPreferences.getInstance().readBoolean(
+                ChromePreferenceKeys.FLAGS_FORCE_TABLET_UI_ENABLED, false));
+    }
+
+    public static void warmUp() {
+        // intentionally empty
+    }
+
     /**
      * @return The //base SharedPreferencesManager singleton.
      */
diff --git a/chrome/browser/preferences/android/java/src/org/chromium/chrome/browser/preferences/LegacyChromePreferenceKeys.java b/chrome/browser/preferences/android/java/src/org/chromium/chrome/browser/preferences/LegacyChromePreferenceKeys.java
--- a/chrome/browser/preferences/android/java/src/org/chromium/chrome/browser/preferences/LegacyChromePreferenceKeys.java
+++ b/chrome/browser/preferences/android/java/src/org/chromium/chrome/browser/preferences/LegacyChromePreferenceKeys.java
@@ -57,6 +57,7 @@ public class LegacyChromePreferenceKeys {
                 ChromePreferenceKeys.FIRST_RUN_FLOW_COMPLETE,
                 ChromePreferenceKeys.FIRST_RUN_FLOW_SIGNIN_SETUP,
                 ChromePreferenceKeys.FIRST_RUN_LIGHTWEIGHT_FLOW_COMPLETE,
+                ChromePreferenceKeys.FLAGS_FORCE_TABLET_UI_ENABLED,
                 ChromePreferenceKeys.FIRST_RUN_SKIP_WELCOME_PAGE,
                 ChromePreferenceKeys.HISTORY_SHOW_HISTORY_INFO,
                 ChromePreferenceKeys.HOMEPAGE_ENABLED,
diff --git a/chrome/browser/ui/android/desktop_windowing/java/src/org/chromium/chrome/browser/ui/desktop_windowing/AppHeaderCoordinator.java b/chrome/browser/ui/android/desktop_windowing/java/src/org/chromium/chrome/browser/ui/desktop_windowing/AppHeaderCoordinator.java
--- a/chrome/browser/ui/android/desktop_windowing/java/src/org/chromium/chrome/browser/ui/desktop_windowing/AppHeaderCoordinator.java
+++ b/chrome/browser/ui/android/desktop_windowing/java/src/org/chromium/chrome/browser/ui/desktop_windowing/AppHeaderCoordinator.java
@@ -39,6 +39,7 @@ import org.chromium.components.browser_ui.desktop_windowing.AppHeaderState;
 import org.chromium.components.browser_ui.desktop_windowing.DesktopWindowStateManager;
 import org.chromium.components.browser_ui.edge_to_edge.EdgeToEdgeStateProvider;
 import org.chromium.ui.CaptionBarInsetsRectProvider;
+import org.chromium.ui.base.DeviceFormFactor;
 import org.chromium.ui.InsetObserver;
 import org.chromium.ui.InsetObserver.WindowInsetsConsumer;
 import org.chromium.ui.InsetsRectProvider;
@@ -260,6 +261,7 @@ public class AppHeaderCoordinator
     private static @DesktopWindowHeuristicResult int checkIsInDesktopWindow(
             InsetsRectProvider insetsRectProvider,
             @DesktopWindowHeuristicResult int currentResult) {
+        if (DeviceFormFactor.isForceTabletUI()) return DesktopWindowHeuristicResult.IN_DESKTOP_WINDOW;
         @DesktopWindowHeuristicResult int newResult;
 
         Insets captionBarInset = insetsRectProvider.getCachedInset();
diff --git a/chrome/browser/ui/android/omnibox/java/src/org/chromium/chrome/browser/omnibox/LocationBarCoordinator.java b/chrome/browser/ui/android/omnibox/java/src/org/chromium/chrome/browser/omnibox/LocationBarCoordinator.java
--- a/chrome/browser/ui/android/omnibox/java/src/org/chromium/chrome/browser/omnibox/LocationBarCoordinator.java
+++ b/chrome/browser/ui/android/omnibox/java/src/org/chromium/chrome/browser/omnibox/LocationBarCoordinator.java
@@ -847,7 +847,7 @@ public class LocationBarCoordinator
     }
 
     private boolean isTabletWindow() {
-        return DeviceFormFactor.isWindowOnTablet(mWindowAndroid);
+        return DeviceFormFactor.isWindowOnTablet(mWindowAndroid) || isTabletLayout();
     }
 
     /* package */ LocationBarMediator getMediatorForTesting() {
diff --git a/chrome/browser/ui/android/strings/android_chrome_strings.grd b/chrome/browser/ui/android/strings/android_chrome_strings.grd
--- a/chrome/browser/ui/android/strings/android_chrome_strings.grd
+++ b/chrome/browser/ui/android/strings/android_chrome_strings.grd
@@ -1660,6 +1660,13 @@ Your Google account may have other forms of browsing history like searches and a
         Privacy guide explanation closed
       </message>
 
+      <message name="IDS_FORCE_TABLET_UI_SUMMARY" desc="Summary of the preference that allows the user to force chromium to use tablet UI.">
+       Open chromium in Tablet Mode
+      </message>
+      <message name="IDS_FORCE_TABLET_UI_TITLE" desc="Title of the preference that allows the user to update force tablet UI settings.">
+        Force Tablet Mode
+      </message>
+
       <!-- Safety check -->
       <message name="IDS_PREFS_SAFETY_CHECK" desc="Title of the Safety check element in settings, allowing the user to check multiple areas of browser safety. [CHAR_LIMIT=32]">
         Safety check
diff --git a/chrome/browser/ui/android/toolbar/java/res/layout/control_container.xml b/chrome/browser/ui/android/toolbar/java/res/layout/control_container.xml
--- a/chrome/browser/ui/android/toolbar/java/res/layout/control_container.xml
+++ b/chrome/browser/ui/android/toolbar/java/res/layout/control_container.xml
@@ -9,7 +9,7 @@ found in the LICENSE file.
     android:id="@+id/control_container"
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
-    android:minHeight="@dimen/control_container_height" >
+    android:minHeight="@dimen/control_container_height_cromite" >
 
     <view
         class="org.chromium.chrome.browser.toolbar.top.ToolbarControlContainer$ToolbarViewResourceFrameLayout"
@@ -20,7 +20,7 @@ found in the LICENSE file.
         <ViewStub
             android:id="@+id/toolbar_stub"
             android:layout_width="match_parent"
-            android:layout_marginTop="@dimen/tab_strip_height"
+            android:layout_marginTop="@dimen/tab_strip_height_cromite"
             android:layout_height="@dimen/toolbar_height_no_shadow" />
 
         <ImageView
@@ -28,7 +28,7 @@ found in the LICENSE file.
             android:src="@drawable/toolbar_hairline"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/control_container_height"
+            android:layout_marginTop="@dimen/control_container_height_cromite"
             android:scaleType="fitXY"
             android:importantForAccessibility="no" />
 
@@ -36,7 +36,7 @@ found in the LICENSE file.
             android:id="@+id/find_toolbar_stub"
             android:inflatedId="@+id/find_toolbar"
             android:visibility="gone"
-            android:layout_marginTop="@dimen/tab_strip_height"
+            android:layout_marginTop="@dimen/tab_strip_height_cromite"
             android:layout_width="match_parent"
             android:layout_height="@dimen/toolbar_height_no_shadow"
             android:layout="@layout/find_toolbar" />
diff --git a/chrome/browser/ui/android/toolbar/java/res/layout/toolbar_tablet.xml b/chrome/browser/ui/android/toolbar/java/res/layout/toolbar_tablet.xml
--- a/chrome/browser/ui/android/toolbar/java/res/layout/toolbar_tablet.xml
+++ b/chrome/browser/ui/android/toolbar/java/res/layout/toolbar_tablet.xml
@@ -15,7 +15,7 @@ found in the LICENSE file.
     android:id="@+id/toolbar"
     android:layout_width="match_parent"
     android:layout_height="@dimen/toolbar_height_no_shadow"
-    android:layout_marginTop="@dimen/tab_strip_height"
+    android:layout_marginTop="@dimen/tab_strip_height_tabletui"
     android:background="@macro/default_bg_color"
      >
 
diff --git a/chrome/browser/ui/android/toolbar/java/res/values-sw600dp/dimens.xml b/chrome/browser/ui/android/toolbar/java/res/values-sw600dp/dimens.xml
--- a/chrome/browser/ui/android/toolbar/java/res/values-sw600dp/dimens.xml
+++ b/chrome/browser/ui/android/toolbar/java/res/values-sw600dp/dimens.xml
@@ -7,6 +7,7 @@ found in the LICENSE file.
 
 <resources>
     <!-- Tab Strip Dimensions -->
-    <dimen name="tab_strip_height">40dp</dimen>
-    <dimen name="tab_strip_reserved_top_padding">2dp</dimen>
+    <dimen name="tab_strip_height_cromite">40dp</dimen>
+    <dimen name="tab_strip_height_tabletui">40dp</dimen>
+    <dimen name="tab_strip_reserved_top_padding_cromite">2dp</dimen>
 </resources>
diff --git a/chrome/browser/ui/android/toolbar/java/res/values/dimens.xml b/chrome/browser/ui/android/toolbar/java/res/values/dimens.xml
--- a/chrome/browser/ui/android/toolbar/java/res/values/dimens.xml
+++ b/chrome/browser/ui/android/toolbar/java/res/values/dimens.xml
@@ -10,8 +10,10 @@ found in the LICENSE file.
     <dimen name="toolbar_tab_count_text_size_2_digit">9dp</dimen>
 
     <!-- Tab Strip Dimensions -->
-    <dimen name="tab_strip_height">0dp</dimen>
-    <dimen name="tab_strip_reserved_top_padding">0dp</dimen>
+    <dimen name="tab_strip_height_cromite">0dp</dimen>
+    <dimen name="tab_strip_height_tabletui">40dp</dimen>
+    <dimen name="tab_strip_reserved_top_padding_cromite">0dp</dimen>
+    <dimen name="tab_strip_reserved_top_padding_tabletui">2dp</dimen>
 
     <dimen name="ntp_search_box_height">64dp</dimen>
 
diff --git a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/ControlContainer.java b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/ControlContainer.java
--- a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/ControlContainer.java
+++ b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/ControlContainer.java
@@ -26,7 +26,7 @@ public interface ControlContainer {
      *
      * @param toolbarLayoutId The ID of the toolbar layout to use.
      */
-    void initWithToolbar(int toolbarLayoutId);
+    void initWithToolbar(int toolbarLayoutId, int controlContainerHeightOverrideId);
 
     /**
      * @return The {@link ViewResourceAdapter} that exposes this {@link View} as a CC resource.
diff --git a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarControlContainer.java b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarControlContainer.java
--- a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarControlContainer.java
+++ b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarControlContainer.java
@@ -7,6 +7,7 @@ package org.chromium.chrome.browser.toolbar.top;
 import static org.chromium.build.NullUtil.assumeNonNull;
 
 import android.content.Context;
+import android.content.res.Resources;
 import android.graphics.Canvas;
 import android.graphics.Color;
 import android.graphics.PorterDuff;
@@ -154,8 +155,25 @@ public class ToolbarControlContainer extends OptimizedFrameLayout
 
     @Override
     @Initializer
-    public void initWithToolbar(int toolbarLayoutId) {
+    public void initWithToolbar(int toolbarLayoutId, int controlContainerHeightOverrideId) {
         try (TraceEvent te = TraceEvent.scoped("ToolbarControlContainer.initWithToolbar")) {
+            if (controlContainerHeightOverrideId != 0) {
+                Resources res = getContext().getResources();
+                setMinimumHeight((int) res.getDimension(controlContainerHeightOverrideId));
+                int tab_strip_height =
+                    (int) res.getDimension(R.dimen.tab_strip_height_tabletui);
+
+                View view = findViewById(R.id.toolbar_stub);
+                if (view != null)
+                    ((MarginLayoutParams)view.getLayoutParams()).topMargin = tab_strip_height;
+
+                view = findViewById(R.id.toolbar_hairline);
+                if (view != null) view.setVisibility(View.GONE);
+
+                view = findViewById(R.id.find_toolbar_stub);
+                if (view != null)
+                    ((MarginLayoutParams)view.getLayoutParams()).topMargin = tab_strip_height;
+            }
             mToolbarContainer =
                     (ToolbarViewResourceFrameLayout) findViewById(R.id.toolbar_container);
             ViewStub toolbarStub = findViewById(R.id.toolbar_stub);
diff --git a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarLayout.java b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarLayout.java
--- a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarLayout.java
+++ b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarLayout.java
@@ -65,6 +65,7 @@ import org.chromium.chrome.browser.util.BrowserUiUtils.ModuleTypeOnStartAndNtp;
 import org.chromium.components.feature_engagement.Tracker;
 import org.chromium.ui.base.ViewUtils;
 import org.chromium.ui.util.MotionEventUtils;
+import org.chromium.ui.base.DeviceFormFactor;
 import org.chromium.ui.util.TokenHolder;
 import org.chromium.url.GURL;
 
@@ -571,7 +572,9 @@ public abstract class ToolbarLayout extends FrameLayout
      * not have a tab strip.
      */
     protected int getTabStripHeightFromResource() {
-        return getResources().getDimensionPixelSize(R.dimen.tab_strip_height);
+        if (DeviceFormFactor.isForceTabletUI())
+            return getResources().getDimensionPixelSize(R.dimen.tab_strip_height_tabletui);
+        return getResources().getDimensionPixelSize(R.dimen.tab_strip_height_cromite);
     }
 
     /** Triggered when the content view for the specified tab has changed. */
diff --git a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/tab_strip/HeightTransitionHandler.java b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/tab_strip/HeightTransitionHandler.java
--- a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/tab_strip/HeightTransitionHandler.java
+++ b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/tab_strip/HeightTransitionHandler.java
@@ -29,6 +29,7 @@ import org.chromium.chrome.browser.toolbar.top.ToolbarLayout;
 import org.chromium.chrome.browser.toolbar.top.tab_strip.TabStripTransitionCoordinator.TabStripHeightObserver;
 import org.chromium.chrome.browser.toolbar.top.tab_strip.TabStripTransitionCoordinator.TabStripTransitionDelegate;
 import org.chromium.ui.base.ViewUtils;
+import org.chromium.ui.base.DeviceFormFactor;
 import org.chromium.ui.resources.dynamics.DynamicResourceReadyOnceCallback;
 import org.chromium.ui.util.TokenHolder;
 
@@ -559,6 +560,7 @@ class HeightTransitionHandler {
         if (TabStripTransitionCoordinator.sHeightTransitionThresholdForTesting != null) {
             return TabStripTransitionCoordinator.sHeightTransitionThresholdForTesting;
         }
+        if (DeviceFormFactor.isForceTabletUI()) return 0;
         return TRANSITION_THRESHOLD_DP;
     }
 
diff --git a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/tab_strip/TabStripTransitionCoordinator.java b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/tab_strip/TabStripTransitionCoordinator.java
--- a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/tab_strip/TabStripTransitionCoordinator.java
+++ b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/tab_strip/TabStripTransitionCoordinator.java
@@ -28,6 +28,7 @@ import org.chromium.chrome.browser.ui.desktop_windowing.AppHeaderUtils;
 import org.chromium.components.browser_ui.desktop_windowing.AppHeaderState;
 import org.chromium.components.browser_ui.desktop_windowing.DesktopWindowStateManager;
 import org.chromium.components.browser_ui.desktop_windowing.DesktopWindowStateManager.AppHeaderObserver;
+import org.chromium.ui.base.DeviceFormFactor;
 
 /** Class used to manage tab strip visibility and height updates. */
 @NullMarked
@@ -153,7 +154,10 @@ public class TabStripTransitionCoordinator implements ComponentCallbacks, AppHea
         mTabStripReservedTopPadding =
                 controlContainerView()
                         .getResources()
-                        .getDimensionPixelSize(R.dimen.tab_strip_reserved_top_padding);
+                        .getDimensionPixelSize(
+                            DeviceFormFactor.isForceTabletUI()
+                                ? R.dimen.tab_strip_reserved_top_padding_tabletui
+                                : R.dimen.tab_strip_reserved_top_padding_cromite);
 
         mOnLayoutChangedListener =
                 (view, left, top, right, bottom, oldLeft, oldTop, oldRight, oldBottom) -> {
diff --git a/components/browser_ui/accessibility/android/java/res/xml/accessibility_preferences.xml b/components/browser_ui/accessibility/android/java/res/xml/accessibility_preferences.xml
--- a/components/browser_ui/accessibility/android/java/res/xml/accessibility_preferences.xml
+++ b/components/browser_ui/accessibility/android/java/res/xml/accessibility_preferences.xml
@@ -41,6 +41,11 @@ found in the LICENSE file.
         android:summary="@string/jump_start_omnibox_summary"
         android:title="@string/jump_start_omnibox_title" />
 
+    <org.chromium.components.browser_ui.settings.ChromeSwitchPreference
+        android:key="force_tablet_ui"
+        android:summary="@string/force_tablet_ui_summary"
+        android:title="@string/force_tablet_ui_title" />
+
     <Preference
         android:key="captions"
         android:title="@string/accessibility_captions_title"/>
diff --git a/components/browser_ui/accessibility/android/java/src/org/chromium/components/browser_ui/accessibility/AccessibilitySettings.java b/components/browser_ui/accessibility/android/java/src/org/chromium/components/browser_ui/accessibility/AccessibilitySettings.java
--- a/components/browser_ui/accessibility/android/java/src/org/chromium/components/browser_ui/accessibility/AccessibilitySettings.java
+++ b/components/browser_ui/accessibility/android/java/src/org/chromium/components/browser_ui/accessibility/AccessibilitySettings.java
@@ -30,6 +30,7 @@ import org.chromium.content_public.browser.ContentFeatureList;
 import org.chromium.content_public.browser.ContentFeatureMap;
 
 import org.chromium.chrome.browser.settings.ChromeBaseSettingsFragment;
+import org.chromium.components.browser_ui.accessibility.AccessibilitySettingsDelegate.BooleanPreferenceDelegate;
 
 /** Fragment to keep track of all the accessibility related preferences. */
 @NullMarked
@@ -45,6 +46,9 @@ public class AccessibilitySettings extends ChromeBaseSettingsFragment
     public static final String PREF_ZOOM_INFO = "zoom_info";
     public static final String PREF_IMAGE_DESCRIPTIONS = "image_descriptions";
 
+    private BooleanPreferenceDelegate mForceTabletUIDelegate;
+    static final String PREF_FORCE_TABLET_UI = "force_tablet_ui";
+
     private PageZoomPreference mPageZoomDefaultZoomPref;
     private ChromeSwitchPreference mPageZoomIncludeOSAdjustment;
     private ChromeSwitchPreference mPageZoomAlwaysShowPref;
@@ -112,6 +116,12 @@ public class AccessibilitySettings extends ChromeBaseSettingsFragment
                 mDelegate.getReaderAccessibilityDelegate().getValue());
         readerForAccessibilityPref.setOnPreferenceChangeListener(this);
 
+        ChromeSwitchPreference forceTabletUiPref =
+                (ChromeSwitchPreference) findPreference(PREF_FORCE_TABLET_UI);
+        mForceTabletUIDelegate = mDelegate.getForceTabletUIDelegate();
+        forceTabletUiPref.setChecked(mForceTabletUIDelegate.getValue());
+        forceTabletUiPref.setOnPreferenceChangeListener(this);
+
         Preference captions = findPreference(PREF_CAPTIONS);
         captions.setOnPreferenceClickListener(
                 preference -> {
@@ -171,6 +181,9 @@ public class AccessibilitySettings extends ChromeBaseSettingsFragment
     public boolean onPreferenceChange(Preference preference, Object newValue) {
         if (PREF_FORCE_ENABLE_ZOOM.equals(preference.getKey())) {
             mDelegate.getForceEnableZoomAccessibilityDelegate().setValue((Boolean) newValue);
+        } else if (PREF_FORCE_TABLET_UI.equals(preference.getKey())) {
+            mForceTabletUIDelegate.setValue((Boolean) newValue);
+            mDelegate.requestRestart(getActivity());
         } else if (PREF_READER_FOR_ACCESSIBILITY.equals(preference.getKey())) {
             boolean readerModeEnabled = (Boolean) newValue;
             mDelegate.getReaderAccessibilityDelegate().setValue(readerModeEnabled);
diff --git a/components/browser_ui/accessibility/android/java/src/org/chromium/components/browser_ui/accessibility/AccessibilitySettingsDelegate.java b/components/browser_ui/accessibility/android/java/src/org/chromium/components/browser_ui/accessibility/AccessibilitySettingsDelegate.java
--- a/components/browser_ui/accessibility/android/java/src/org/chromium/components/browser_ui/accessibility/AccessibilitySettingsDelegate.java
+++ b/components/browser_ui/accessibility/android/java/src/org/chromium/components/browser_ui/accessibility/AccessibilitySettingsDelegate.java
@@ -41,6 +41,8 @@ public interface AccessibilitySettingsDelegate {
      */
     BrowserContextHandle getBrowserContextHandle();
 
+    BooleanPreferenceDelegate getForceTabletUIDelegate();
+
     /**
      * @return boolean value specifying if the Image Descriptions user setting should be shown.
      */
diff --git a/ui/android/java/src/org/chromium/ui/base/DeviceFormFactor.java b/ui/android/java/src/org/chromium/ui/base/DeviceFormFactor.java
--- a/ui/android/java/src/org/chromium/ui/base/DeviceFormFactor.java
+++ b/ui/android/java/src/org/chromium/ui/base/DeviceFormFactor.java
@@ -69,6 +69,14 @@ public class DeviceFormFactor {
         return BuildConfig.IS_DESKTOP_ANDROID;
     }
 
+    private static boolean mForceTabletUI = false;
+    public static void setForceTabletUI(boolean forceTabletUI) {
+        mForceTabletUI = forceTabletUI;
+    }
+    public static boolean isForceTabletUI() {
+        return mForceTabletUI;
+    }
+
     /**
      * Each activity could be on a different display, and this will just tell you whether the
      * display associated with the application context is "tablet sized". Use {@link
@@ -77,6 +85,7 @@ public class DeviceFormFactor {
     @CalledByNative
     @Deprecated
     public static boolean isTablet() {
+        if (mForceTabletUI) return true;
         if (sIsTabletForTesting != null) {
             return sIsTabletForTesting;
         }
@@ -107,6 +116,7 @@ public class DeviceFormFactor {
      *     E.g. http://developer.samsung.com/samsung-dex/testing
      */
     public static boolean isNonMultiDisplayContextOnTablet(Context context) {
+        if (mForceTabletUI) return true;
         return detectScreenWidthBucket(context) >= SCREEN_BUCKET_TABLET;
     }
 
@@ -142,6 +152,7 @@ public class DeviceFormFactor {
      * @return The screen width bucket the device is in (see constants at the top of this class).
      */
     private static int detectScreenWidthBucket(Context context) {
+        if (mForceTabletUI) return SCREEN_BUCKET_TABLET;
         return context.getResources().getInteger(R.integer.min_screen_width_bucket);
     }
 
@@ -149,6 +160,7 @@ public class DeviceFormFactor {
         ThreadUtils.assertOnUiThread();
         Context context = windowAndroid.getContext().get();
         if (context == null) return 0;
+        if (mForceTabletUI) return SCREEN_BUCKET_TABLET;
         return context.getResources().getInteger(R.integer.min_screen_width_bucket);
     }
 
@@ -158,6 +170,7 @@ public class DeviceFormFactor {
      */
     @UiThread
     public static int getNonMultiDisplayMinimumTabletWidthPx(Context context) {
+        if (mForceTabletUI) return 0;
         return getMinimumTabletWidthPx(DisplayAndroid.getNonMultiDisplay(context));
     }
 
@@ -166,6 +179,7 @@ public class DeviceFormFactor {
      *         layout.
      */
     public static int getMinimumTabletWidthPx(DisplayAndroid display) {
+        if (mForceTabletUI) return 0;
         return DisplayUtil.dpToPx(display, DeviceFormFactor.MINIMUM_TABLET_WIDTH_DP);
     }
 }
--
