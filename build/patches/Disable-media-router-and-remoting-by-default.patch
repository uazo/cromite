From: Daniel Micay <danielmicay@gmail.com>
Date: Thu, 4 Jul 2019 19:08:52 -0400
Subject: Disable media router and remoting by default

Original License: MIT - https://spdx.org/licenses/MIT.html
License: GPL-3.0-only - https://spdx.org/licenses/GPL-3.0-only.html
---
 chrome/browser/media/router/media_router_feature.cc    |  6 +++++-
 chrome/browser/profiles/profile_impl.cc                |  2 +-
 content/child/runtime_features.cc                      |  2 ++
 .../renderer/modules/remoteplayback/remote_playback.cc |  2 +-
 .../renderer/platform/runtime_enabled_features.json5   | 10 +++-------
 5 files changed, 12 insertions(+), 10 deletions(-)

diff --git a/chrome/browser/media/router/media_router_feature.cc b/chrome/browser/media/router/media_router_feature.cc
--- a/chrome/browser/media/router/media_router_feature.cc
+++ b/chrome/browser/media/router/media_router_feature.cc
@@ -107,6 +107,7 @@ void ClearMediaRouterStoredPrefsForTesting() {
 }
 
 bool MediaRouterEnabled(content::BrowserContext* context) {
+  if ((true)) return false;
 #if !BUILDFLAG(IS_ANDROID)
   if (!base::FeatureList::IsEnabled(kMediaRouter)) {
     return false;
@@ -153,7 +154,7 @@ void RegisterProfilePrefs(PrefRegistrySimple* registry) {
   registry->RegisterStringPref(prefs::kMediaRouterReceiverIdHashToken, "",
                                PrefRegistry::PUBLIC);
   registry->RegisterBooleanPref(
-      media_router::prefs::kMediaRouterMediaRemotingEnabled, true);
+      media_router::prefs::kMediaRouterMediaRemotingEnabled, false); // disabled in Bromite
   registry->RegisterBooleanPref(
       media_router::prefs::kMediaRouterShowCastSessionsStartedByOtherDevices,
       true);
@@ -215,4 +216,7 @@ bool IsCastMessageLoggingEnabled() {
 }
 #endif  // !BUILDFLAG(IS_ANDROID)
 
+#if !BUILDFLAG(IS_ANDROID)
+SET_CROMITE_FEATURE_DISABLED(kMediaRouter);
+#endif
 }  // namespace media_router
diff --git a/chrome/browser/profiles/profile_impl.cc b/chrome/browser/profiles/profile_impl.cc
--- a/chrome/browser/profiles/profile_impl.cc
+++ b/chrome/browser/profiles/profile_impl.cc
@@ -430,7 +430,7 @@ void ProfileImpl::RegisterProfilePrefs(
 #endif
 
   registry->RegisterBooleanPref(prefs::kForceEphemeralProfiles, false);
-  registry->RegisterBooleanPref(prefs::kEnableMediaRouter, true);
+  registry->RegisterBooleanPref(prefs::kEnableMediaRouter, false);
 #if !BUILDFLAG(IS_ANDROID)
   registry->RegisterBooleanPref(prefs::kShowCastIconInToolbar, false);
 #endif  // !BUILDFLAG(IS_ANDROID)
diff --git a/content/child/runtime_features.cc b/content/child/runtime_features.cc
--- a/content/child/runtime_features.cc
+++ b/content/child/runtime_features.cc
@@ -551,6 +551,8 @@ void SetCustomizedRuntimeFeaturesFromCombinedArgs(
     WebRuntimeFeatures::EnableV8IdleTasks(true);
   }
 
+  WebRuntimeFeatures::EnableRemotePlayback(false);
+
   WebRuntimeFeatures::EnableBackForwardCache(
       content::IsBackForwardCacheEnabled());
 }
diff --git a/third_party/blink/renderer/modules/remoteplayback/remote_playback.cc b/third_party/blink/renderer/modules/remoteplayback/remote_playback.cc
--- a/third_party/blink/renderer/modules/remoteplayback/remote_playback.cc
+++ b/third_party/blink/renderer/modules/remoteplayback/remote_playback.cc
@@ -94,7 +94,7 @@ KURL GetAvailabilityUrl(const KURL& source,
 }
 
 bool IsBackgroundAvailabilityMonitoringDisabled() {
-  return MemoryPressureListenerRegistry::IsLowEndDevice();
+  return true;
 }
 
 void RemotingStarting(HTMLMediaElement& media_element) {
diff --git a/third_party/blink/renderer/platform/runtime_enabled_features.json5 b/third_party/blink/renderer/platform/runtime_enabled_features.json5
--- a/third_party/blink/renderer/platform/runtime_enabled_features.json5
+++ b/third_party/blink/renderer/platform/runtime_enabled_features.json5
@@ -3762,14 +3762,10 @@
       base_feature: "none",
     },
     {
-      name: "RemotePlaybackBackend",
+      name: "RemotePlaybackBackend", // disabled
       settable_from_internals: true,
-      status: {
-        "Android": "stable",
-        "Win": "stable",
-        "Mac": "stable",
-        "Linux": "stable",
-        "default": "experimental"},
+      // Tracking bug for the implementation: https://crbug.com/728609
+      status: "experimental",        // by default
     },
     {
       name: "RemoveDanglingMarkupInTarget",
--
